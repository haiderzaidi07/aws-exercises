pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-2'
        REPOSITORY_URI = '504649076991.dkr.ecr.us-east-2.amazonaws.com/haider-jenkins'
    }

    stages {
        stage('Initialize') {
            steps {
                script {
                    // Set COMMIT_HASH as environment variable
                    env.COMMIT_HASH = sh(script: 'git rev-parse --short=7 HEAD', returnStdout: true).trim()
                    echo "COMMIT_HASH set to: ${env.COMMIT_HASH}"
                }
            }
        }

        stage('Verify') {
            steps {
                sh '''
                    echo "Verifying contents of task13"
                    ls -la task13/
                    echo "Checking if AWS CLI is installed"
                    aws --version
                '''
            }
        }

        stage('Build and Push') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'haider-aws-creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                        set -e
                        cd task13/

                        echo "Logging into Amazon ECR..."
                        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI

                        echo "Using COMMIT_HASH: $COMMIT_HASH"

                        echo "Building Docker image..."
                        docker build -t haider-jenkins .

                        echo "Tagging Docker image with 'latest' and commit hash..."
                        docker tag haider-jenkins:latest $REPOSITORY_URI:latest
                        docker tag haider-jenkins:latest $REPOSITORY_URI:$COMMIT_HASH

                        echo "Pushing Docker images to ECR..."
                        docker push $REPOSITORY_URI:latest
                        docker push $REPOSITORY_URI:$COMMIT_HASH
                    '''
                }
            }
        }

        stage('Deploy') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'haider-aws-creds', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                        set -e
                        cd task13/
                        cat task-definition.json

                        echo "Replacing 'latest' tag with commit hash: $COMMIT_HASH"
                        sed -i "s/\\(:[^\\\"]*\\)latest/\\1$COMMIT_HASH/" task-definition.json
                        cat task-definition.json

                        echo "Registering new task definition with updated image tag..."
                        aws ecs register-task-definition --cli-input-json file://task-definition.json

                        echo "Updating ECS service to use the new task definition..."
                        aws ecs update-service \
                            --cluster haider-cluster \
                            --service haider-td-jenkins-service-zb6375ca \
                            --task-definition haider-td-jenkins \
                            --force-new-deployment
                    '''
                }
            }
        }
    }
}